//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SISMed", "SolicitacaoUsuario", "Solicitacao", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SISMed.Models.Solicitacao), "Usuario", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SISMed.Models.Usuario), true)]
[assembly: EdmRelationshipAttribute("SISMed", "HorarioDeAtendimentoMedico", "HorarioDeAtendimento", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SISMed.Models.HorarioDeAtendimento), "Medico", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SISMed.Models.Medico), true)]
[assembly: EdmRelationshipAttribute("SISMed", "TipoDeUsuarioUsuario", "TipoDeUsuario", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SISMed.Models.TipoDeUsuario), "Usuario", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SISMed.Models.Usuario), true)]
[assembly: EdmRelationshipAttribute("SISMed", "MedicoUsuario", "Medico", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SISMed.Models.Medico), "Usuario", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SISMed.Models.Usuario))]
[assembly: EdmRelationshipAttribute("SISMed", "DiaDaSemanaHorarioDeAtendimento", "DiaDaSemana", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SISMed.Models.DiaDaSemana), "HorarioDeAtendimento", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SISMed.Models.HorarioDeAtendimento), true)]
[assembly: EdmRelationshipAttribute("SISMed", "PessoaEstadoCivil", "Pessoa", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SISMed.Models.Pessoa), "EstadoCivil", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SISMed.Models.EstadoCivil), true)]
[assembly: EdmRelationshipAttribute("SISMed", "ConsultaMedicacao", "Consulta", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SISMed.Models.Consulta), "Medicacao", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SISMed.Models.Medicacao), true)]
[assembly: EdmRelationshipAttribute("SISMed", "MedicoConsulta", "Medico", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SISMed.Models.Medico), "Consulta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SISMed.Models.Consulta), true)]
[assembly: EdmRelationshipAttribute("SISMed", "PacienteConsulta", "Paciente", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SISMed.Models.Paciente), "Consulta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SISMed.Models.Consulta), true)]
[assembly: EdmRelationshipAttribute("SISMed", "MedicoAgendamento", "Medico", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SISMed.Models.Medico), "Agendamento", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SISMed.Models.Agendamento), true)]
[assembly: EdmRelationshipAttribute("SISMed", "PacienteAgendamento", "Paciente", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SISMed.Models.Paciente), "Agendamento", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SISMed.Models.Agendamento), true)]

#endregion

namespace SISMed.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SISMedEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SISMedEntities object using the connection string found in the 'SISMedEntities' section of the application configuration file.
        /// </summary>
        public SISMedEntities() : base("name=SISMedEntities", "SISMedEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SISMedEntities object.
        /// </summary>
        public SISMedEntities(string connectionString) : base(connectionString, "SISMedEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SISMedEntities object.
        /// </summary>
        public SISMedEntities(EntityConnection connection) : base(connection, "SISMedEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Solicitacao> Solicitacoes
        {
            get
            {
                if ((_Solicitacoes == null))
                {
                    _Solicitacoes = base.CreateObjectSet<Solicitacao>("Solicitacoes");
                }
                return _Solicitacoes;
            }
        }
        private ObjectSet<Solicitacao> _Solicitacoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Pessoa> Pessoas
        {
            get
            {
                if ((_Pessoas == null))
                {
                    _Pessoas = base.CreateObjectSet<Pessoa>("Pessoas");
                }
                return _Pessoas;
            }
        }
        private ObjectSet<Pessoa> _Pessoas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Medico> Medicos
        {
            get
            {
                if ((_Medicos == null))
                {
                    _Medicos = base.CreateObjectSet<Medico>("Medicos");
                }
                return _Medicos;
            }
        }
        private ObjectSet<Medico> _Medicos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HorarioDeAtendimento> HorariosDeAtendimento
        {
            get
            {
                if ((_HorariosDeAtendimento == null))
                {
                    _HorariosDeAtendimento = base.CreateObjectSet<HorarioDeAtendimento>("HorariosDeAtendimento");
                }
                return _HorariosDeAtendimento;
            }
        }
        private ObjectSet<HorarioDeAtendimento> _HorariosDeAtendimento;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TipoDeUsuario> TiposDeUsuario
        {
            get
            {
                if ((_TiposDeUsuario == null))
                {
                    _TiposDeUsuario = base.CreateObjectSet<TipoDeUsuario>("TiposDeUsuario");
                }
                return _TiposDeUsuario;
            }
        }
        private ObjectSet<TipoDeUsuario> _TiposDeUsuario;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DiaDaSemana> DiasDaSemana
        {
            get
            {
                if ((_DiasDaSemana == null))
                {
                    _DiasDaSemana = base.CreateObjectSet<DiaDaSemana>("DiasDaSemana");
                }
                return _DiasDaSemana;
            }
        }
        private ObjectSet<DiaDaSemana> _DiasDaSemana;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EstadoCivil> EstadosCivis
        {
            get
            {
                if ((_EstadosCivis == null))
                {
                    _EstadosCivis = base.CreateObjectSet<EstadoCivil>("EstadosCivis");
                }
                return _EstadosCivis;
            }
        }
        private ObjectSet<EstadoCivil> _EstadosCivis;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Consulta> Consultas
        {
            get
            {
                if ((_Consultas == null))
                {
                    _Consultas = base.CreateObjectSet<Consulta>("Consultas");
                }
                return _Consultas;
            }
        }
        private ObjectSet<Consulta> _Consultas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Medicacao> Medicacoes
        {
            get
            {
                if ((_Medicacoes == null))
                {
                    _Medicacoes = base.CreateObjectSet<Medicacao>("Medicacoes");
                }
                return _Medicacoes;
            }
        }
        private ObjectSet<Medicacao> _Medicacoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Agendamento> Agendamentos
        {
            get
            {
                if ((_Agendamentos == null))
                {
                    _Agendamentos = base.CreateObjectSet<Agendamento>("Agendamentos");
                }
                return _Agendamentos;
            }
        }
        private ObjectSet<Agendamento> _Agendamentos;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Solicitacoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSolicitacoes(Solicitacao solicitacao)
        {
            base.AddObject("Solicitacoes", solicitacao);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Pessoas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPessoas(Pessoa pessoa)
        {
            base.AddObject("Pessoas", pessoa);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Medicos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedicos(Medico medico)
        {
            base.AddObject("Medicos", medico);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HorariosDeAtendimento EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHorariosDeAtendimento(HorarioDeAtendimento horarioDeAtendimento)
        {
            base.AddObject("HorariosDeAtendimento", horarioDeAtendimento);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TiposDeUsuario EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTiposDeUsuario(TipoDeUsuario tipoDeUsuario)
        {
            base.AddObject("TiposDeUsuario", tipoDeUsuario);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DiasDaSemana EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDiasDaSemana(DiaDaSemana diaDaSemana)
        {
            base.AddObject("DiasDaSemana", diaDaSemana);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EstadosCivis EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEstadosCivis(EstadoCivil estadoCivil)
        {
            base.AddObject("EstadosCivis", estadoCivil);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Consultas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConsultas(Consulta consulta)
        {
            base.AddObject("Consultas", consulta);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Medicacoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedicacoes(Medicacao medicacao)
        {
            base.AddObject("Medicacoes", medicacao);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Agendamentos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAgendamentos(Agendamento agendamento)
        {
            base.AddObject("Agendamentos", agendamento);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SISMed", Name="Agendamento")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Agendamento : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Agendamento object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="horario">Initial value of the Horario property.</param>
        /// <param name="medicoId">Initial value of the MedicoId property.</param>
        /// <param name="pacienteId">Initial value of the PacienteId property.</param>
        /// <param name="ativo">Initial value of the Ativo property.</param>
        public static Agendamento CreateAgendamento(global::System.Int32 id, global::System.DateTime horario, global::System.Int32 medicoId, global::System.Int32 pacienteId, global::System.Boolean ativo)
        {
            Agendamento agendamento = new Agendamento();
            agendamento.Id = id;
            agendamento.Horario = horario;
            agendamento.MedicoId = medicoId;
            agendamento.PacienteId = pacienteId;
            agendamento.Ativo = ativo;
            return agendamento;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Horario
        {
            get
            {
                return _Horario;
            }
            set
            {
                OnHorarioChanging(value);
                ReportPropertyChanging("Horario");
                _Horario = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Horario");
                OnHorarioChanged();
            }
        }
        private global::System.DateTime _Horario;
        partial void OnHorarioChanging(global::System.DateTime value);
        partial void OnHorarioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicoId
        {
            get
            {
                return _MedicoId;
            }
            set
            {
                OnMedicoIdChanging(value);
                ReportPropertyChanging("MedicoId");
                _MedicoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicoId");
                OnMedicoIdChanged();
            }
        }
        private global::System.Int32 _MedicoId;
        partial void OnMedicoIdChanging(global::System.Int32 value);
        partial void OnMedicoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PacienteId
        {
            get
            {
                return _PacienteId;
            }
            set
            {
                OnPacienteIdChanging(value);
                ReportPropertyChanging("PacienteId");
                _PacienteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PacienteId");
                OnPacienteIdChanged();
            }
        }
        private global::System.Int32 _PacienteId;
        partial void OnPacienteIdChanging(global::System.Int32 value);
        partial void OnPacienteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Ativo
        {
            get
            {
                return _Ativo;
            }
            set
            {
                OnAtivoChanging(value);
                ReportPropertyChanging("Ativo");
                _Ativo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ativo");
                OnAtivoChanged();
            }
        }
        private global::System.Boolean _Ativo;
        partial void OnAtivoChanging(global::System.Boolean value);
        partial void OnAtivoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SISMed", "MedicoAgendamento", "Medico")]
        public Medico Medico
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medico>("SISMed.MedicoAgendamento", "Medico").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medico>("SISMed.MedicoAgendamento", "Medico").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Medico> MedicoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medico>("SISMed.MedicoAgendamento", "Medico");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Medico>("SISMed.MedicoAgendamento", "Medico", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SISMed", "PacienteAgendamento", "Paciente")]
        public Paciente Paciente
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Paciente>("SISMed.PacienteAgendamento", "Paciente").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Paciente>("SISMed.PacienteAgendamento", "Paciente").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Paciente> PacienteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Paciente>("SISMed.PacienteAgendamento", "Paciente");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Paciente>("SISMed.PacienteAgendamento", "Paciente", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SISMed", Name="Consulta")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Consulta : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Consulta object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="queixas">Initial value of the Queixas property.</param>
        /// <param name="diagnostico">Initial value of the Diagnostico property.</param>
        /// <param name="dataHora">Initial value of the DataHora property.</param>
        /// <param name="medicoId">Initial value of the MedicoId property.</param>
        /// <param name="pacienteId">Initial value of the PacienteId property.</param>
        /// <param name="peso">Initial value of the Peso property.</param>
        /// <param name="altura">Initial value of the Altura property.</param>
        public static Consulta CreateConsulta(global::System.Int32 id, global::System.String queixas, global::System.String diagnostico, global::System.DateTime dataHora, global::System.Int32 medicoId, global::System.Int32 pacienteId, global::System.Decimal peso, global::System.Decimal altura)
        {
            Consulta consulta = new Consulta();
            consulta.Id = id;
            consulta.Queixas = queixas;
            consulta.Diagnostico = diagnostico;
            consulta.DataHora = dataHora;
            consulta.MedicoId = medicoId;
            consulta.PacienteId = pacienteId;
            consulta.Peso = peso;
            consulta.Altura = altura;
            return consulta;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Queixas
        {
            get
            {
                return _Queixas;
            }
            set
            {
                OnQueixasChanging(value);
                ReportPropertyChanging("Queixas");
                _Queixas = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Queixas");
                OnQueixasChanged();
            }
        }
        private global::System.String _Queixas;
        partial void OnQueixasChanging(global::System.String value);
        partial void OnQueixasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Diagnostico
        {
            get
            {
                return _Diagnostico;
            }
            set
            {
                OnDiagnosticoChanging(value);
                ReportPropertyChanging("Diagnostico");
                _Diagnostico = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Diagnostico");
                OnDiagnosticoChanged();
            }
        }
        private global::System.String _Diagnostico;
        partial void OnDiagnosticoChanging(global::System.String value);
        partial void OnDiagnosticoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DataHora
        {
            get
            {
                return _DataHora;
            }
            set
            {
                OnDataHoraChanging(value);
                ReportPropertyChanging("DataHora");
                _DataHora = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataHora");
                OnDataHoraChanged();
            }
        }
        private global::System.DateTime _DataHora;
        partial void OnDataHoraChanging(global::System.DateTime value);
        partial void OnDataHoraChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicoId
        {
            get
            {
                return _MedicoId;
            }
            set
            {
                OnMedicoIdChanging(value);
                ReportPropertyChanging("MedicoId");
                _MedicoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicoId");
                OnMedicoIdChanged();
            }
        }
        private global::System.Int32 _MedicoId;
        partial void OnMedicoIdChanging(global::System.Int32 value);
        partial void OnMedicoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PacienteId
        {
            get
            {
                return _PacienteId;
            }
            set
            {
                OnPacienteIdChanging(value);
                ReportPropertyChanging("PacienteId");
                _PacienteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PacienteId");
                OnPacienteIdChanged();
            }
        }
        private global::System.Int32 _PacienteId;
        partial void OnPacienteIdChanging(global::System.Int32 value);
        partial void OnPacienteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Peso
        {
            get
            {
                return _Peso;
            }
            set
            {
                OnPesoChanging(value);
                ReportPropertyChanging("Peso");
                _Peso = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Peso");
                OnPesoChanged();
            }
        }
        private global::System.Decimal _Peso;
        partial void OnPesoChanging(global::System.Decimal value);
        partial void OnPesoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Altura
        {
            get
            {
                return _Altura;
            }
            set
            {
                OnAlturaChanging(value);
                ReportPropertyChanging("Altura");
                _Altura = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Altura");
                OnAlturaChanged();
            }
        }
        private global::System.Decimal _Altura;
        partial void OnAlturaChanging(global::System.Decimal value);
        partial void OnAlturaChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SISMed", "ConsultaMedicacao", "Medicacao")]
        public EntityCollection<Medicacao> Medicacoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Medicacao>("SISMed.ConsultaMedicacao", "Medicacao");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Medicacao>("SISMed.ConsultaMedicacao", "Medicacao", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SISMed", "MedicoConsulta", "Medico")]
        public Medico Medico
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medico>("SISMed.MedicoConsulta", "Medico").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medico>("SISMed.MedicoConsulta", "Medico").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Medico> MedicoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medico>("SISMed.MedicoConsulta", "Medico");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Medico>("SISMed.MedicoConsulta", "Medico", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SISMed", "PacienteConsulta", "Paciente")]
        public Paciente Paciente
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Paciente>("SISMed.PacienteConsulta", "Paciente").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Paciente>("SISMed.PacienteConsulta", "Paciente").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Paciente> PacienteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Paciente>("SISMed.PacienteConsulta", "Paciente");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Paciente>("SISMed.PacienteConsulta", "Paciente", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SISMed", Name="DiaDaSemana")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DiaDaSemana : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DiaDaSemana object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nome">Initial value of the Nome property.</param>
        public static DiaDaSemana CreateDiaDaSemana(global::System.Int32 id, global::System.String nome)
        {
            DiaDaSemana diaDaSemana = new DiaDaSemana();
            diaDaSemana.Id = id;
            diaDaSemana.Nome = nome;
            return diaDaSemana;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nome
        {
            get
            {
                return _Nome;
            }
            set
            {
                OnNomeChanging(value);
                ReportPropertyChanging("Nome");
                _Nome = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nome");
                OnNomeChanged();
            }
        }
        private global::System.String _Nome;
        partial void OnNomeChanging(global::System.String value);
        partial void OnNomeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SISMed", "DiaDaSemanaHorarioDeAtendimento", "HorarioDeAtendimento")]
        public EntityCollection<HorarioDeAtendimento> HorariosDeAtendimento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HorarioDeAtendimento>("SISMed.DiaDaSemanaHorarioDeAtendimento", "HorarioDeAtendimento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HorarioDeAtendimento>("SISMed.DiaDaSemanaHorarioDeAtendimento", "HorarioDeAtendimento", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SISMed", Name="EstadoCivil")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EstadoCivil : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EstadoCivil object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nome">Initial value of the Nome property.</param>
        public static EstadoCivil CreateEstadoCivil(global::System.Int32 id, global::System.String nome)
        {
            EstadoCivil estadoCivil = new EstadoCivil();
            estadoCivil.Id = id;
            estadoCivil.Nome = nome;
            return estadoCivil;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nome
        {
            get
            {
                return _Nome;
            }
            set
            {
                OnNomeChanging(value);
                ReportPropertyChanging("Nome");
                _Nome = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nome");
                OnNomeChanged();
            }
        }
        private global::System.String _Nome;
        partial void OnNomeChanging(global::System.String value);
        partial void OnNomeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SISMed", "PessoaEstadoCivil", "Pessoa")]
        public EntityCollection<Pessoa> Pessoas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Pessoa>("SISMed.PessoaEstadoCivil", "Pessoa");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Pessoa>("SISMed.PessoaEstadoCivil", "Pessoa", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SISMed", Name="HorarioDeAtendimento")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HorarioDeAtendimento : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HorarioDeAtendimento object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="horaInicio">Initial value of the HoraInicio property.</param>
        /// <param name="horaFim">Initial value of the HoraFim property.</param>
        /// <param name="medicoId">Initial value of the MedicoId property.</param>
        /// <param name="diaDaSemanaId">Initial value of the DiaDaSemanaId property.</param>
        public static HorarioDeAtendimento CreateHorarioDeAtendimento(global::System.Int32 id, global::System.TimeSpan horaInicio, global::System.TimeSpan horaFim, global::System.Int32 medicoId, global::System.Int32 diaDaSemanaId)
        {
            HorarioDeAtendimento horarioDeAtendimento = new HorarioDeAtendimento();
            horarioDeAtendimento.Id = id;
            horarioDeAtendimento.HoraInicio = horaInicio;
            horarioDeAtendimento.HoraFim = horaFim;
            horarioDeAtendimento.MedicoId = medicoId;
            horarioDeAtendimento.DiaDaSemanaId = diaDaSemanaId;
            return horarioDeAtendimento;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan HoraInicio
        {
            get
            {
                return _HoraInicio;
            }
            set
            {
                OnHoraInicioChanging(value);
                ReportPropertyChanging("HoraInicio");
                _HoraInicio = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HoraInicio");
                OnHoraInicioChanged();
            }
        }
        private global::System.TimeSpan _HoraInicio;
        partial void OnHoraInicioChanging(global::System.TimeSpan value);
        partial void OnHoraInicioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan HoraFim
        {
            get
            {
                return _HoraFim;
            }
            set
            {
                OnHoraFimChanging(value);
                ReportPropertyChanging("HoraFim");
                _HoraFim = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HoraFim");
                OnHoraFimChanged();
            }
        }
        private global::System.TimeSpan _HoraFim;
        partial void OnHoraFimChanging(global::System.TimeSpan value);
        partial void OnHoraFimChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicoId
        {
            get
            {
                return _MedicoId;
            }
            set
            {
                OnMedicoIdChanging(value);
                ReportPropertyChanging("MedicoId");
                _MedicoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicoId");
                OnMedicoIdChanged();
            }
        }
        private global::System.Int32 _MedicoId;
        partial void OnMedicoIdChanging(global::System.Int32 value);
        partial void OnMedicoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DiaDaSemanaId
        {
            get
            {
                return _DiaDaSemanaId;
            }
            set
            {
                OnDiaDaSemanaIdChanging(value);
                ReportPropertyChanging("DiaDaSemanaId");
                _DiaDaSemanaId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiaDaSemanaId");
                OnDiaDaSemanaIdChanged();
            }
        }
        private global::System.Int32 _DiaDaSemanaId;
        partial void OnDiaDaSemanaIdChanging(global::System.Int32 value);
        partial void OnDiaDaSemanaIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SISMed", "HorarioDeAtendimentoMedico", "Medico")]
        public Medico Medico
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medico>("SISMed.HorarioDeAtendimentoMedico", "Medico").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medico>("SISMed.HorarioDeAtendimentoMedico", "Medico").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Medico> MedicoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medico>("SISMed.HorarioDeAtendimentoMedico", "Medico");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Medico>("SISMed.HorarioDeAtendimentoMedico", "Medico", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SISMed", "DiaDaSemanaHorarioDeAtendimento", "DiaDaSemana")]
        public DiaDaSemana DiaDaSemana
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DiaDaSemana>("SISMed.DiaDaSemanaHorarioDeAtendimento", "DiaDaSemana").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DiaDaSemana>("SISMed.DiaDaSemanaHorarioDeAtendimento", "DiaDaSemana").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DiaDaSemana> DiaDaSemanaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DiaDaSemana>("SISMed.DiaDaSemanaHorarioDeAtendimento", "DiaDaSemana");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DiaDaSemana>("SISMed.DiaDaSemanaHorarioDeAtendimento", "DiaDaSemana", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SISMed", Name="Medicacao")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Medicacao : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Medicacao object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nome">Initial value of the Nome property.</param>
        /// <param name="quantidade">Initial value of the Quantidade property.</param>
        /// <param name="consultaId">Initial value of the ConsultaId property.</param>
        public static Medicacao CreateMedicacao(global::System.Int32 id, global::System.String nome, global::System.String quantidade, global::System.Int32 consultaId)
        {
            Medicacao medicacao = new Medicacao();
            medicacao.Id = id;
            medicacao.Nome = nome;
            medicacao.Quantidade = quantidade;
            medicacao.ConsultaId = consultaId;
            return medicacao;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nome
        {
            get
            {
                return _Nome;
            }
            set
            {
                OnNomeChanging(value);
                ReportPropertyChanging("Nome");
                _Nome = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nome");
                OnNomeChanged();
            }
        }
        private global::System.String _Nome;
        partial void OnNomeChanging(global::System.String value);
        partial void OnNomeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Quantidade
        {
            get
            {
                return _Quantidade;
            }
            set
            {
                OnQuantidadeChanging(value);
                ReportPropertyChanging("Quantidade");
                _Quantidade = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Quantidade");
                OnQuantidadeChanged();
            }
        }
        private global::System.String _Quantidade;
        partial void OnQuantidadeChanging(global::System.String value);
        partial void OnQuantidadeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConsultaId
        {
            get
            {
                return _ConsultaId;
            }
            set
            {
                OnConsultaIdChanging(value);
                ReportPropertyChanging("ConsultaId");
                _ConsultaId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConsultaId");
                OnConsultaIdChanged();
            }
        }
        private global::System.Int32 _ConsultaId;
        partial void OnConsultaIdChanging(global::System.Int32 value);
        partial void OnConsultaIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SISMed", "ConsultaMedicacao", "Consulta")]
        public Consulta Consulta
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Consulta>("SISMed.ConsultaMedicacao", "Consulta").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Consulta>("SISMed.ConsultaMedicacao", "Consulta").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Consulta> ConsultaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Consulta>("SISMed.ConsultaMedicacao", "Consulta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Consulta>("SISMed.ConsultaMedicacao", "Consulta", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SISMed", Name="Medico")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Medico : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Medico object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="usuarioId">Initial value of the UsuarioId property.</param>
        public static Medico CreateMedico(global::System.Int32 id, global::System.Int32 usuarioId)
        {
            Medico medico = new Medico();
            medico.Id = id;
            medico.UsuarioId = usuarioId;
            return medico;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UsuarioId
        {
            get
            {
                return _UsuarioId;
            }
            set
            {
                OnUsuarioIdChanging(value);
                ReportPropertyChanging("UsuarioId");
                _UsuarioId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UsuarioId");
                OnUsuarioIdChanged();
            }
        }
        private global::System.Int32 _UsuarioId;
        partial void OnUsuarioIdChanging(global::System.Int32 value);
        partial void OnUsuarioIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SISMed", "HorarioDeAtendimentoMedico", "HorarioDeAtendimento")]
        public EntityCollection<HorarioDeAtendimento> HorariosDeAtendimento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HorarioDeAtendimento>("SISMed.HorarioDeAtendimentoMedico", "HorarioDeAtendimento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HorarioDeAtendimento>("SISMed.HorarioDeAtendimentoMedico", "HorarioDeAtendimento", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SISMed", "MedicoUsuario", "Usuario")]
        public Usuario Usuario
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usuario>("SISMed.MedicoUsuario", "Usuario").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usuario>("SISMed.MedicoUsuario", "Usuario").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Usuario> UsuarioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usuario>("SISMed.MedicoUsuario", "Usuario");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Usuario>("SISMed.MedicoUsuario", "Usuario", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SISMed", "MedicoConsulta", "Consulta")]
        public EntityCollection<Consulta> Consultas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Consulta>("SISMed.MedicoConsulta", "Consulta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Consulta>("SISMed.MedicoConsulta", "Consulta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SISMed", "MedicoAgendamento", "Agendamento")]
        public EntityCollection<Agendamento> Agendamentos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Agendamento>("SISMed.MedicoAgendamento", "Agendamento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Agendamento>("SISMed.MedicoAgendamento", "Agendamento", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SISMed", Name="Paciente")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Paciente : Pessoa
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Paciente object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nome">Initial value of the Nome property.</param>
        /// <param name="sobrenome">Initial value of the Sobrenome property.</param>
        /// <param name="cPF">Initial value of the CPF property.</param>
        /// <param name="rG">Initial value of the RG property.</param>
        /// <param name="sexo">Initial value of the Sexo property.</param>
        /// <param name="telefoneCelular">Initial value of the TelefoneCelular property.</param>
        /// <param name="telefoneResidencial">Initial value of the TelefoneResidencial property.</param>
        /// <param name="estadoCivilId">Initial value of the EstadoCivilId property.</param>
        /// <param name="dataNascimento">Initial value of the DataNascimento property.</param>
        /// <param name="tipoSanguineo">Initial value of the TipoSanguineo property.</param>
        /// <param name="fatorRh">Initial value of the FatorRh property.</param>
        /// <param name="alergias">Initial value of the Alergias property.</param>
        public static Paciente CreatePaciente(global::System.Int32 id, global::System.String nome, global::System.String sobrenome, global::System.String cPF, global::System.String rG, global::System.String sexo, global::System.String telefoneCelular, global::System.String telefoneResidencial, global::System.Int32 estadoCivilId, global::System.DateTime dataNascimento, global::System.String tipoSanguineo, global::System.Boolean fatorRh, global::System.String alergias)
        {
            Paciente paciente = new Paciente();
            paciente.Id = id;
            paciente.Nome = nome;
            paciente.Sobrenome = sobrenome;
            paciente.CPF = cPF;
            paciente.RG = rG;
            paciente.Sexo = sexo;
            paciente.TelefoneCelular = telefoneCelular;
            paciente.TelefoneResidencial = telefoneResidencial;
            paciente.EstadoCivilId = estadoCivilId;
            paciente.DataNascimento = dataNascimento;
            paciente.TipoSanguineo = tipoSanguineo;
            paciente.FatorRh = fatorRh;
            paciente.Alergias = alergias;
            return paciente;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TipoSanguineo
        {
            get
            {
                return _TipoSanguineo;
            }
            set
            {
                OnTipoSanguineoChanging(value);
                ReportPropertyChanging("TipoSanguineo");
                _TipoSanguineo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TipoSanguineo");
                OnTipoSanguineoChanged();
            }
        }
        private global::System.String _TipoSanguineo;
        partial void OnTipoSanguineoChanging(global::System.String value);
        partial void OnTipoSanguineoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean FatorRh
        {
            get
            {
                return _FatorRh;
            }
            set
            {
                OnFatorRhChanging(value);
                ReportPropertyChanging("FatorRh");
                _FatorRh = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FatorRh");
                OnFatorRhChanged();
            }
        }
        private global::System.Boolean _FatorRh;
        partial void OnFatorRhChanging(global::System.Boolean value);
        partial void OnFatorRhChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Alergias
        {
            get
            {
                return _Alergias;
            }
            set
            {
                OnAlergiasChanging(value);
                ReportPropertyChanging("Alergias");
                _Alergias = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Alergias");
                OnAlergiasChanged();
            }
        }
        private global::System.String _Alergias;
        partial void OnAlergiasChanging(global::System.String value);
        partial void OnAlergiasChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SISMed", "PacienteConsulta", "Consulta")]
        public EntityCollection<Consulta> Consultas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Consulta>("SISMed.PacienteConsulta", "Consulta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Consulta>("SISMed.PacienteConsulta", "Consulta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SISMed", "PacienteAgendamento", "Agendamento")]
        public EntityCollection<Agendamento> Agendamentos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Agendamento>("SISMed.PacienteAgendamento", "Agendamento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Agendamento>("SISMed.PacienteAgendamento", "Agendamento", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SISMed", Name="Pessoa")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Usuario))]
    [KnownTypeAttribute(typeof(Paciente))]
    public partial class Pessoa : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Pessoa object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nome">Initial value of the Nome property.</param>
        /// <param name="sobrenome">Initial value of the Sobrenome property.</param>
        /// <param name="cPF">Initial value of the CPF property.</param>
        /// <param name="rG">Initial value of the RG property.</param>
        /// <param name="sexo">Initial value of the Sexo property.</param>
        /// <param name="telefoneCelular">Initial value of the TelefoneCelular property.</param>
        /// <param name="telefoneResidencial">Initial value of the TelefoneResidencial property.</param>
        /// <param name="estadoCivilId">Initial value of the EstadoCivilId property.</param>
        /// <param name="dataNascimento">Initial value of the DataNascimento property.</param>
        public static Pessoa CreatePessoa(global::System.Int32 id, global::System.String nome, global::System.String sobrenome, global::System.String cPF, global::System.String rG, global::System.String sexo, global::System.String telefoneCelular, global::System.String telefoneResidencial, global::System.Int32 estadoCivilId, global::System.DateTime dataNascimento)
        {
            Pessoa pessoa = new Pessoa();
            pessoa.Id = id;
            pessoa.Nome = nome;
            pessoa.Sobrenome = sobrenome;
            pessoa.CPF = cPF;
            pessoa.RG = rG;
            pessoa.Sexo = sexo;
            pessoa.TelefoneCelular = telefoneCelular;
            pessoa.TelefoneResidencial = telefoneResidencial;
            pessoa.EstadoCivilId = estadoCivilId;
            pessoa.DataNascimento = dataNascimento;
            return pessoa;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nome
        {
            get
            {
                return _Nome;
            }
            set
            {
                OnNomeChanging(value);
                ReportPropertyChanging("Nome");
                _Nome = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nome");
                OnNomeChanged();
            }
        }
        private global::System.String _Nome;
        partial void OnNomeChanging(global::System.String value);
        partial void OnNomeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Sobrenome
        {
            get
            {
                return _Sobrenome;
            }
            set
            {
                OnSobrenomeChanging(value);
                ReportPropertyChanging("Sobrenome");
                _Sobrenome = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Sobrenome");
                OnSobrenomeChanged();
            }
        }
        private global::System.String _Sobrenome;
        partial void OnSobrenomeChanging(global::System.String value);
        partial void OnSobrenomeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CPF
        {
            get
            {
                return _CPF;
            }
            set
            {
                OnCPFChanging(value);
                ReportPropertyChanging("CPF");
                _CPF = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CPF");
                OnCPFChanged();
            }
        }
        private global::System.String _CPF;
        partial void OnCPFChanging(global::System.String value);
        partial void OnCPFChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RG
        {
            get
            {
                return _RG;
            }
            set
            {
                OnRGChanging(value);
                ReportPropertyChanging("RG");
                _RG = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RG");
                OnRGChanged();
            }
        }
        private global::System.String _RG;
        partial void OnRGChanging(global::System.String value);
        partial void OnRGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Sexo
        {
            get
            {
                return _Sexo;
            }
            set
            {
                OnSexoChanging(value);
                ReportPropertyChanging("Sexo");
                _Sexo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Sexo");
                OnSexoChanged();
            }
        }
        private global::System.String _Sexo;
        partial void OnSexoChanging(global::System.String value);
        partial void OnSexoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TelefoneCelular
        {
            get
            {
                return _TelefoneCelular;
            }
            set
            {
                OnTelefoneCelularChanging(value);
                ReportPropertyChanging("TelefoneCelular");
                _TelefoneCelular = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TelefoneCelular");
                OnTelefoneCelularChanged();
            }
        }
        private global::System.String _TelefoneCelular;
        partial void OnTelefoneCelularChanging(global::System.String value);
        partial void OnTelefoneCelularChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TelefoneResidencial
        {
            get
            {
                return _TelefoneResidencial;
            }
            set
            {
                OnTelefoneResidencialChanging(value);
                ReportPropertyChanging("TelefoneResidencial");
                _TelefoneResidencial = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TelefoneResidencial");
                OnTelefoneResidencialChanged();
            }
        }
        private global::System.String _TelefoneResidencial;
        partial void OnTelefoneResidencialChanging(global::System.String value);
        partial void OnTelefoneResidencialChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EstadoCivilId
        {
            get
            {
                return _EstadoCivilId;
            }
            set
            {
                OnEstadoCivilIdChanging(value);
                ReportPropertyChanging("EstadoCivilId");
                _EstadoCivilId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstadoCivilId");
                OnEstadoCivilIdChanged();
            }
        }
        private global::System.Int32 _EstadoCivilId;
        partial void OnEstadoCivilIdChanging(global::System.Int32 value);
        partial void OnEstadoCivilIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DataNascimento
        {
            get
            {
                return _DataNascimento;
            }
            set
            {
                OnDataNascimentoChanging(value);
                ReportPropertyChanging("DataNascimento");
                _DataNascimento = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataNascimento");
                OnDataNascimentoChanged();
            }
        }
        private global::System.DateTime _DataNascimento;
        partial void OnDataNascimentoChanging(global::System.DateTime value);
        partial void OnDataNascimentoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SISMed", "PessoaEstadoCivil", "EstadoCivil")]
        public EstadoCivil EstadoCivil
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EstadoCivil>("SISMed.PessoaEstadoCivil", "EstadoCivil").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EstadoCivil>("SISMed.PessoaEstadoCivil", "EstadoCivil").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EstadoCivil> EstadoCivilReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EstadoCivil>("SISMed.PessoaEstadoCivil", "EstadoCivil");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EstadoCivil>("SISMed.PessoaEstadoCivil", "EstadoCivil", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SISMed", Name="Solicitacao")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Solicitacao : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Solicitacao object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="dataHora">Initial value of the DataHora property.</param>
        /// <param name="descricao">Initial value of the Descricao property.</param>
        /// <param name="usuarioId">Initial value of the UsuarioId property.</param>
        public static Solicitacao CreateSolicitacao(global::System.Int32 id, global::System.DateTime dataHora, global::System.String descricao, global::System.Int32 usuarioId)
        {
            Solicitacao solicitacao = new Solicitacao();
            solicitacao.Id = id;
            solicitacao.DataHora = dataHora;
            solicitacao.Descricao = descricao;
            solicitacao.UsuarioId = usuarioId;
            return solicitacao;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DataHora
        {
            get
            {
                return _DataHora;
            }
            set
            {
                OnDataHoraChanging(value);
                ReportPropertyChanging("DataHora");
                _DataHora = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataHora");
                OnDataHoraChanged();
            }
        }
        private global::System.DateTime _DataHora;
        partial void OnDataHoraChanging(global::System.DateTime value);
        partial void OnDataHoraChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Descricao
        {
            get
            {
                return _Descricao;
            }
            set
            {
                OnDescricaoChanging(value);
                ReportPropertyChanging("Descricao");
                _Descricao = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Descricao");
                OnDescricaoChanged();
            }
        }
        private global::System.String _Descricao;
        partial void OnDescricaoChanging(global::System.String value);
        partial void OnDescricaoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Resolvido
        {
            get
            {
                return _Resolvido;
            }
            set
            {
                OnResolvidoChanging(value);
                ReportPropertyChanging("Resolvido");
                _Resolvido = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Resolvido");
                OnResolvidoChanged();
            }
        }
        private global::System.Boolean _Resolvido = false;
        partial void OnResolvidoChanging(global::System.Boolean value);
        partial void OnResolvidoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UsuarioId
        {
            get
            {
                return _UsuarioId;
            }
            set
            {
                OnUsuarioIdChanging(value);
                ReportPropertyChanging("UsuarioId");
                _UsuarioId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UsuarioId");
                OnUsuarioIdChanged();
            }
        }
        private global::System.Int32 _UsuarioId;
        partial void OnUsuarioIdChanging(global::System.Int32 value);
        partial void OnUsuarioIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SISMed", "SolicitacaoUsuario", "Usuario")]
        public Usuario Usuario
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usuario>("SISMed.SolicitacaoUsuario", "Usuario").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usuario>("SISMed.SolicitacaoUsuario", "Usuario").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Usuario> UsuarioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usuario>("SISMed.SolicitacaoUsuario", "Usuario");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Usuario>("SISMed.SolicitacaoUsuario", "Usuario", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SISMed", Name="TipoDeUsuario")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TipoDeUsuario : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TipoDeUsuario object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nome">Initial value of the Nome property.</param>
        public static TipoDeUsuario CreateTipoDeUsuario(global::System.Int32 id, global::System.String nome)
        {
            TipoDeUsuario tipoDeUsuario = new TipoDeUsuario();
            tipoDeUsuario.Id = id;
            tipoDeUsuario.Nome = nome;
            return tipoDeUsuario;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nome
        {
            get
            {
                return _Nome;
            }
            set
            {
                OnNomeChanging(value);
                ReportPropertyChanging("Nome");
                _Nome = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nome");
                OnNomeChanged();
            }
        }
        private global::System.String _Nome;
        partial void OnNomeChanging(global::System.String value);
        partial void OnNomeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SISMed", "TipoDeUsuarioUsuario", "Usuario")]
        public EntityCollection<Usuario> Usuarios
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Usuario>("SISMed.TipoDeUsuarioUsuario", "Usuario");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Usuario>("SISMed.TipoDeUsuarioUsuario", "Usuario", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SISMed", Name="Usuario")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Usuario : Pessoa
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Usuario object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nome">Initial value of the Nome property.</param>
        /// <param name="sobrenome">Initial value of the Sobrenome property.</param>
        /// <param name="cPF">Initial value of the CPF property.</param>
        /// <param name="rG">Initial value of the RG property.</param>
        /// <param name="sexo">Initial value of the Sexo property.</param>
        /// <param name="telefoneCelular">Initial value of the TelefoneCelular property.</param>
        /// <param name="telefoneResidencial">Initial value of the TelefoneResidencial property.</param>
        /// <param name="estadoCivilId">Initial value of the EstadoCivilId property.</param>
        /// <param name="dataNascimento">Initial value of the DataNascimento property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="senha">Initial value of the Senha property.</param>
        /// <param name="tipoDeUsuarioId">Initial value of the TipoDeUsuarioId property.</param>
        public static Usuario CreateUsuario(global::System.Int32 id, global::System.String nome, global::System.String sobrenome, global::System.String cPF, global::System.String rG, global::System.String sexo, global::System.String telefoneCelular, global::System.String telefoneResidencial, global::System.Int32 estadoCivilId, global::System.DateTime dataNascimento, global::System.String email, global::System.String senha, global::System.Int32 tipoDeUsuarioId)
        {
            Usuario usuario = new Usuario();
            usuario.Id = id;
            usuario.Nome = nome;
            usuario.Sobrenome = sobrenome;
            usuario.CPF = cPF;
            usuario.RG = rG;
            usuario.Sexo = sexo;
            usuario.TelefoneCelular = telefoneCelular;
            usuario.TelefoneResidencial = telefoneResidencial;
            usuario.EstadoCivilId = estadoCivilId;
            usuario.DataNascimento = dataNascimento;
            usuario.Email = email;
            usuario.Senha = senha;
            usuario.TipoDeUsuarioId = tipoDeUsuarioId;
            return usuario;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Senha
        {
            get
            {
                return _Senha;
            }
            set
            {
                OnSenhaChanging(value);
                ReportPropertyChanging("Senha");
                _Senha = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Senha");
                OnSenhaChanged();
            }
        }
        private global::System.String _Senha;
        partial void OnSenhaChanging(global::System.String value);
        partial void OnSenhaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TipoDeUsuarioId
        {
            get
            {
                return _TipoDeUsuarioId;
            }
            set
            {
                OnTipoDeUsuarioIdChanging(value);
                ReportPropertyChanging("TipoDeUsuarioId");
                _TipoDeUsuarioId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TipoDeUsuarioId");
                OnTipoDeUsuarioIdChanged();
            }
        }
        private global::System.Int32 _TipoDeUsuarioId;
        partial void OnTipoDeUsuarioIdChanging(global::System.Int32 value);
        partial void OnTipoDeUsuarioIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SISMed", "SolicitacaoUsuario", "Solicitacao")]
        public EntityCollection<Solicitacao> Solicitacao
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Solicitacao>("SISMed.SolicitacaoUsuario", "Solicitacao");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Solicitacao>("SISMed.SolicitacaoUsuario", "Solicitacao", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SISMed", "TipoDeUsuarioUsuario", "TipoDeUsuario")]
        public TipoDeUsuario TipoDeUsuario
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TipoDeUsuario>("SISMed.TipoDeUsuarioUsuario", "TipoDeUsuario").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TipoDeUsuario>("SISMed.TipoDeUsuarioUsuario", "TipoDeUsuario").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TipoDeUsuario> TipoDeUsuarioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TipoDeUsuario>("SISMed.TipoDeUsuarioUsuario", "TipoDeUsuario");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TipoDeUsuario>("SISMed.TipoDeUsuarioUsuario", "TipoDeUsuario", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
